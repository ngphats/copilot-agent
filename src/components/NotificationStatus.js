import React from 'react';
import { useReminders } from '../hooks/useReminders';

const NotificationStatus = () => {
  const { notificationPermission, showNotification } = useReminders();

  const handleTestNotification = () => {
    showNotification('üîî Test Reminder', {
      body: 'Th√¥ng b√°o nh·∫Øc nh·ªü ƒëang ho·∫°t ƒë·ªông!',
      tag: 'test-notification'
    });
  };

  const handleRequestPermission = () => {
    if ('Notification' in window && Notification.permission === 'default') {
      Notification.requestPermission().then((permission) => {
        if (permission === 'granted') {
          handleTestNotification();
        }
      });
    }
  };

  if (!('Notification' in window)) {
    return (
      <div className="bg-yellow-50 dark:bg-yellow-900/20 border border-yellow-200 dark:border-yellow-800 rounded-lg p-3 mb-4">
        <div className="flex items-center">
          <span className="text-yellow-600 dark:text-yellow-400 text-sm">
            ‚ö†Ô∏è Tr√¨nh duy·ªát kh√¥ng h·ªó tr·ª£ th√¥ng b√°o. T√≠nh nƒÉng nh·∫Øc nh·ªü s·∫Ω kh√¥ng ho·∫°t ƒë·ªông.
          </span>
        </div>
      </div>
    );
  }

  switch (notificationPermission) {
    case 'granted':
      return (
        <div className="bg-green-50 dark:bg-green-900/20 border border-green-200 dark:border-green-800 rounded-lg p-3 mb-4">
          <div className="flex items-center justify-between">
            <span className="text-green-600 dark:text-green-400 text-sm">
              ‚úÖ Th√¥ng b√°o ƒë√£ ƒë∆∞·ª£c b·∫≠t. B·∫°n s·∫Ω nh·∫≠n nh·∫Øc nh·ªü khi ƒë·∫øn th·ªùi gian.
            </span>
            <button
              onClick={handleTestNotification}
              className="todo-button-secondary text-xs"
            >
              Test th√¥ng b√°o
            </button>
          </div>
        </div>
      );
    
    case 'denied':
      return (
        <div className="bg-red-50 dark:bg-red-900/20 border border-red-200 dark:border-red-800 rounded-lg p-3 mb-4">
          <div className="flex items-center">
            <span className="text-red-600 dark:text-red-400 text-sm">
              ‚ùå Th√¥ng b√°o ƒë√£ b·ªã t·ª´ ch·ªëi. Vui l√≤ng b·∫≠t th√¥ng b√°o trong c√†i ƒë·∫∑t tr√¨nh duy·ªát ƒë·ªÉ nh·∫≠n nh·∫Øc nh·ªü.
            </span>
          </div>
        </div>
      );
    
    case 'default':
      return (
        <div className="bg-blue-50 dark:bg-blue-900/20 border border-blue-200 dark:border-blue-800 rounded-lg p-3 mb-4">
          <div className="flex items-center justify-between">
            <span className="text-blue-600 dark:text-blue-400 text-sm">
              üîî Cho ph√©p th√¥ng b√°o ƒë·ªÉ nh·∫≠n nh·∫Øc nh·ªü c√¥ng vi·ªác
            </span>
            <button
              onClick={handleRequestPermission}
              className="todo-button text-xs"
            >
              B·∫≠t th√¥ng b√°o
            </button>
          </div>
        </div>
      );
    
    default:
      return null;
  }
};

export default NotificationStatus;